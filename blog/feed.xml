<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finagle blog</title>
  <id>https://finagle.github.io/blog</id>
  <link href="https://finagle.github.io/blog"/>
  <link href="https://finagle.github.io/blog/blog/feed.xml" rel="self"/>
  <updated>2018-01-16T16:00:00-08:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>📆 January 2018 Release Notes - Version 18.1.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/01/17/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/01/17/release-notes/</id>
    <published>2018-01-16T16:00:00-08:00</published>
    <updated>2018-01-18T09:03:51-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Time to turn the calendar to a new year and a new release — our January release is here!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-18.1.0/CHANGES"&gt;Finagle 18.1.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/finatra/blob/finatra-18.1.0/CHANGELOG.md"&gt;Finatra 18.1.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/scrooge/blob/scrooge-18.1.0/CHANGES"&gt;Scrooge 18.1.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-18.1.0/CHANGES"&gt;TwitterServer 18.1.0&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/blob/util-18.1.0/CHANGES"&gt;Util 18.1.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;FailureDetector&lt;/code&gt; has a new method, &lt;code&gt;onClose&lt;/code&gt;, which provides
a Future that is satisfied when the &lt;code&gt;FailureDetector&lt;/code&gt; marks a peer as Closed.
&lt;a href="https://github.com/twitter/finagle/commit/186f094957b43a9bc4a0e1a5abb6adb95e26fee8"&gt;186f0949&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introduce trace logging of requests as they flow through a
Finagle client or server. These logs can be turned on at runtime by setting
the &amp;ldquo;com.twitter.finagle.request.Logger&amp;rdquo; logger to trace level.
&lt;a href="https://github.com/twitter/finagle/commit/203fed55335633173b2a36b98c30c55336baaf3a"&gt;203fed55&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: HTTP/2 clients now expose the number of currently opened streams under
the &lt;code&gt;$client/streams&lt;/code&gt; gauge. &lt;a href="https://github.com/twitter/finagle/commit/add0050e29ff466c8f94dfa48023a7618c8564df"&gt;add0050e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: HTTP/2 servers now expose the number of currently opened streams under
the &lt;code&gt;$server/streams&lt;/code&gt; gauge. &lt;a href="https://github.com/twitter/finagle/commit/ed6800a3c7b8f01c31a963377bbe5b0147ffd6cc"&gt;ed6800a3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-memcached: By default, the Memcached client now creates two connections
to each endpoint, instead of 4. &lt;a href="https://github.com/twitter/finagle/commit/1c5d9eacd8bacf3ecc6007f17769854cd8a630e0"&gt;1c5d9eac&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-redis: Add support for redis Geo Commands. &lt;a href="https://github.com/twitter/finagle/commit/d32d123665fab5bada54a653029d60a88a29b1a6"&gt;d32d1236&lt;/a&gt; based on the PR
&lt;a href="https://github.com/twitter/finagle/pull/628"&gt;https://github.com/twitter/finagle/pull/628&lt;/a&gt; written by Mura-Mi [&lt;a href="https://github.com/Mura-Mi"&gt;https://github.com/Mura-Mi&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Add &lt;code&gt;c.t.f.thrift.service.ThriftServiceBuilder&lt;/code&gt; and
&lt;code&gt;c.t.f.thrift.service.ReqRepThriftServiceBuilder&lt;/code&gt; for backwards compatibility
of creating higher-kinded method-per-endpoint clients. &lt;a href="https://github.com/twitter/finagle/commit/f61b6f99c7d108b458d5adcb9891ff6ddda7f125"&gt;f61b6f99&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.http.MethodBuilder&lt;/code&gt; and &lt;code&gt;c.t.f.thriftmux.MethodBuilder&lt;/code&gt; now
expose &lt;code&gt;idempotent&lt;/code&gt; and &lt;code&gt;nonIdempotent&lt;/code&gt; methods, which can be used to configure
retries and the sending of backup requests. &lt;a href="https://github.com/twitter/finagle/commit/2c1105e5e57abf5048f991339f9c54f2570fa7ea"&gt;2c1105e5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: Fix a bug with transactions where an exception during a rollback
could leave the connection with a partially committed transaction. &lt;a href="https://github.com/twitter/finagle/commit/4b76bfc2fc86d4b713edb382e0cf38ac79371542"&gt;4b76bfc2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-toggle: &lt;code&gt;c.t.f.toggle.Toggle&lt;/code&gt;s are independent; that is, applying the same value to
two different toggles with the same fraction will produce independent true/false
values. &lt;a href="https://github.com/twitter/finagle/commit/8ef6acb144c57d64dae78d32df724623c29c36e5"&gt;8ef6acb1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runtime Behavior Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core, finagle-netty4: When creating engines, SslClientEngineFactories now use
&lt;code&gt;SslClientEngineFactory.getHostString&lt;/code&gt; instead of &lt;code&gt;SslClientEngineFactory.getHostname&lt;/code&gt;.
This no longer performs an unnecessary reverse lookup when a hostname is not supplied
as part of the &lt;code&gt;SslClientConfiguration&lt;/code&gt;.  &lt;a href="https://github.com/twitter/finagle/commit/d05d1299032673d03b13b32afe668c83de3fd65c"&gt;d05d1299&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: Supplies a dependency on io.netty.netty-tcnative-boringssl-static,
which adds support for ALPN, which is necessary for encrypted http/2.  To use a
different static ssl dependency, exclude the tcnative-boringssl dependency and
manually depend on the one you want to use.  &lt;a href="https://github.com/twitter/finagle/commit/246be7e560e5089396335462b0585214e2f75983"&gt;246be7e5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http, finagle-http: Removed Apache Commons Lang dependency,
&lt;code&gt;org.apache.commons.lang3.time.FastDateFormat&lt;/code&gt; now is &lt;code&gt;java.time.format.DateTimeFormatter&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/8cd6a882bf560bf78594057a756d2dcaa4b0d7d5"&gt;8cd6a882&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: &lt;code&gt;c.t.f.http.Message.headerMap&lt;/code&gt; is now an abstract method.
&lt;a href="https://github.com/twitter/finagle/commit/24e74e5270d0f3c31b50cc1d39181a3908a2ac67"&gt;24e74e52&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.ssl.server.SslServerSessionVerifier&lt;/code&gt; no longer uses the unauthenticated
host information from &lt;code&gt;SSLSession&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/559ae4ad3eb6bae4c2f885fb3149b492c6bf46a0"&gt;559ae4ad&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-memcached: &lt;code&gt;ConcurrentLoadBalancerFactory&lt;/code&gt; was removed and its behavior
was replaced by a Stack.Param inside finagle-core&amp;rsquo;s &lt;code&gt;LoadBalancerFactory&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/502a91d5f927c8c60f02e3d75e87262f407ae068"&gt;502a91d5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift, finagle-thriftmux: Remove &lt;code&gt;ReqRep&lt;/code&gt; specific methods. Since the &amp;ldquo;ReqRep&amp;rdquo;
builders are now subclasses of their non-&amp;ldquo;ReqRep&amp;rdquo; counterparts their is no longer a
need to expose &amp;ldquo;ReqRep&amp;rdquo; specific methods. &lt;a href="https://github.com/twitter/finagle/commit/9737ead820eef60896f562b13881c6f8cd9bb67e"&gt;9737ead8&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deprecations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-exp: &lt;code&gt;c.t.f.exp.BackupRequestFilter&lt;/code&gt; has been deprecated. Please use
&lt;code&gt;c.t.f.client.BackupRequestFilter&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/3326d2fd9435c6e34ba61e2f0b100ea447cbadbe"&gt;3326d2fd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: &lt;code&gt;c.t.f.http.Request.multipart&lt;/code&gt; has been deprecated.
Use &lt;code&gt;c.t.f.http.exp.MultipartDecoder&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/a205bd207c29e4a6d5cf1273db4ea277f56feda8"&gt;a205bd20&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Add support for building all types of Finagle Thrift clients to
the underlying embedded TwitterServer with the &lt;code&gt;c.t.finatra.thrift.ThriftClient&lt;/code&gt;
test utility. See: &lt;a href="https://twitter.github.io/scrooge/Finagle.html#creating-a-client"&gt;https://twitter.github.io/scrooge/Finagle.html#creating-a-client&lt;/a&gt;
&lt;a href="https://github.com/twitter/finatra/commit/47f7f6c71fef30884d445c8ea10666a0232d0ede"&gt;  47f7f6c7&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Added support to finatra/jackson for deserializing &lt;code&gt;com.twitter.util.Duration&lt;/code&gt;
instances from their String representations. &lt;a href="https://github.com/twitter/finatra/commit/9e6576c99800073cabd8be7d869abd64890e44d5"&gt;9e6576c9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Changed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Change visibility of internal class &lt;code&gt;c.t.finatra.http.internal.marshalling.RequestInjectableValues&lt;/code&gt;
to be correctly specified as private to the &lt;code&gt;http&lt;/code&gt; package. &lt;a href="https://github.com/twitter/finatra/commit/712edf91c0361fd9907deaef06e0bd61384f6a7e"&gt;712edf91&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fixed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Ensure we close resources in the &lt;code&gt;ResponseBuilder&lt;/code&gt;. Addresses
&lt;a href="https://github.com/twitter/finatra/issues/440"&gt;#440&lt;/a&gt;. &lt;a href="https://github.com/twitter/finatra/commit/dafe7259b2ec3d89641425e3eca8af56a869b4e3"&gt;dafe7259&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Closed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/issues/440"&gt;#440&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: Update &lt;code&gt;c.t.fingale.thrit.service.MethodPerEndpointBuilder&lt;/code&gt;
to build &lt;code&gt;MethodPerEndpoint&lt;/code&gt; types. Add new &lt;code&gt;ThriftServiceBuilder&lt;/code&gt; for
building the higher-kinded form from a &lt;code&gt;ServicePerEndpoint&lt;/code&gt;. Users should
prefer using the &lt;code&gt;MethodPerEndpointBuilder&lt;/code&gt;. &lt;a href="https://github.com/twitter/scrooge/commit/08b25e3d99cbbb7eece52e7589f2de002aeecb5f"&gt;08b25e3d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: Add more metadata to generated java objects &lt;a href="https://github.com/twitter/scrooge/commit/46dd949c0d6e3859633d8e9cc572eea6fa4f6676"&gt;46dd949c&lt;/a&gt;
Includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;struct and field annotations from the idl files&lt;/li&gt;
&lt;li&gt;which fields have default values&lt;/li&gt;
&lt;li&gt;which field values of TType.STRING are actually binary fields&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;scrooge: Add support for &lt;code&gt;scrooge.Request&lt;/code&gt; and &lt;code&gt;scrooge.Response&lt;/code&gt;
types in generated &lt;code&gt;ThriftMethod&lt;/code&gt; code. &lt;a href="https://github.com/twitter/scrooge/commit/80bfa731310f70bbe2ef8bae974e06bd43b3041d"&gt;80bfa731&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;TwitterServer&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No changes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;util-security: Added &lt;code&gt;c.t.util.security.X509CrlFile&lt;/code&gt; for reading
Certificate Revocation List PEM formatted &lt;code&gt;X509CRL&lt;/code&gt; files.
&lt;a href="https://github.com/twitter/util/commit/32d8cc8ac4fc4c1f9417df6ec6da392291eb4759"&gt;32d8cc8a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Changelogs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-18.1.0/CHANGES"&gt;Finagle 18.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/blob/util-18.1.0/CHANGES"&gt;Util 18.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/blob/scrooge-18.1.0/CHANGES"&gt;Scrooge 18.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-18.1.0/CHANGES"&gt;TwitterServer 18.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/blob/finatra-18.1.0/CHANGELOG.md"&gt;Finatra 18.1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Guava-less</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/12/12/guava-less/"/>
    <id>https://finagle.github.io/blog/2017/12/12/guava-less/</id>
    <published>2017-12-11T16:00:00-08:00</published>
    <updated>2018-01-18T09:03:37-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;We have been minimizing our dependency on &lt;a href="https://github.com/google/guava"&gt;Guava&lt;/a&gt;, which is big
and often causes version conflicts for our users. This work will be
released as part of January&amp;rsquo;s 18.1 release, though there are 2 places
it remains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;util-cache-guava&lt;/code&gt; has a &lt;code&gt;CacheBuilder&lt;/code&gt;-based implementation of
&lt;code&gt;FutureCache&lt;/code&gt;.  We advise replacing this usage with a
&lt;a href="https://github.com/ben-manes/caffeine"&gt;Caffeine&lt;/a&gt; &lt;code&gt;FutureCache&lt;/code&gt; available in
&lt;a href="https://github.com/twitter/util/blob/develop/util-cache/src/main/scala/com/twitter/cache/caffeine/CaffeineCache.scala"&gt;util-cache&lt;/a&gt;. The migration is well documented
in the Caffeine &lt;a href="https://github.com/ben-manes/caffeine/wiki/Guava"&gt;user guide&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finatra&amp;rsquo;s &lt;code&gt;http&lt;/code&gt; module has a few public APIs that use
&lt;code&gt;com.google.common.net.MediaType&lt;/code&gt;.  We aren&amp;rsquo;t planning to address this
in the immediate future, but it&amp;rsquo;s something we&amp;rsquo;d love to tackle given
more time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for following along. Please feel free to ask questions on the
&lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;mailing
list&lt;/a&gt; about
anything that is unclear and we’ll help clarify if you would like to
know more.&lt;/p&gt;

&lt;p&gt;Kevin Oliver and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>⛄ December 2017 Release Notes - Version 17.12.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/12/12/release-notes/"/>
    <id>https://finagle.github.io/blog/2017/12/12/release-notes/</id>
    <published>2017-12-11T16:00:00-08:00</published>
    <updated>2018-01-18T09:03:37-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The December release has arrived!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.12.0/CHANGES"&gt;Finagle 17.12.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/finatra/blob/finatra-17.12.0/CHANGELOG.md"&gt;Finatra 17.12.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.12.0/CHANGES"&gt;Scrooge 17.12.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.12.0/CHANGES"&gt;TwitterServer 17.12.0&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/blob/util-17.12.0/CHANGES"&gt;Util 17.12.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Finagle&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Expose Tunables for MethodBuilder timeout configuration. Update
the http.MethodBuilder and thriftmux.MethodBuilder to accept Tunables for
configuring total and per-request timeouts. &lt;a href="https://github.com/twitter/finagle/commit/c912dd4bff6f11d587b7fd7f42d976a7b6762f14"&gt;c912dd4b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift, finagle-thriftmux: Add support for Scrooge
&lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt; functionality. &lt;a href="https://github.com/twitter/finagle/commit/df5f10bd00b070809ea1f1995becc9bbac6c3089"&gt;df5f10bd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: Add support for Scrooge &lt;code&gt;ServicePerEndpoint&lt;/code&gt; and
&lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt; functionality to &lt;code&gt;thriftmux.MethodBuilder&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/3abaa52437032c2bbc481e5819d9ca19e12a2b11"&gt;3abaa524&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Remove deprecated [Request|Response].[encode|decode][Bytes|String]
methods. Use c.t.f.h.codec.HttpCodec methods instead. &lt;a href="https://github.com/twitter/finagle/commit/006de6a3e762f3725c0c26176145c2634fba3a65"&gt;006de6a3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Move &lt;code&gt;ThriftRichClient&lt;/code&gt; and &lt;code&gt;ThriftRichServer&lt;/code&gt; to
&lt;code&gt;c.t.finagle.thrift&lt;/code&gt; package. &lt;a href="https://github.com/twitter/finagle/commit/fcf66bae591ba1d2707bed97585186268c5b29ff"&gt;fcf66bae&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runtime Behavior Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The &amp;ldquo;pipelining/pending&amp;rdquo; stat has been removed from protocols
using &lt;code&gt;c.t.f.dispatch.PipeliningClientDispatcher&lt;/code&gt;. Refer to the &amp;ldquo;pending&amp;rdquo; stat
for the number of outstanding requests. &lt;a href="https://github.com/twitter/finagle/commit/0d162d17ab8de8f3dd8c317e3abcdbfc11b451f7"&gt;0d162d17&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift,thriftmux: Tracing of RPC method names has been removed. This
concern has moved into Scrooge. &lt;a href="https://github.com/twitter/finagle/commit/df1617582fca5ed3832c18d440dae644d9500cb4"&gt;df161758&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Finatra&lt;/h3&gt;

&lt;p&gt;Added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra-thrift: Add tests for new Scrooge &lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt;
functionalty. &lt;a href="https://github.com/twitter/finatra/commit/b8e919d3bca36bbdd031d75aedc849beb3c7941f"&gt;b8e919d3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Changed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: add a &lt;code&gt;multipart = true&lt;/code&gt; arg to
&lt;code&gt;EmbeddedHttpServer.httpMultipartFormPost&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/c139d95734f60dac9ebbad9b213ad9bfbbb78d9a"&gt;c139d95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;inject-sever: Do not use the &lt;code&gt;c.t.inject.server.EmbeddedTwitterServer&lt;/code&gt;
&lt;code&gt;InMemoryStatsReceiver&lt;/code&gt; for embedded http clients. The http client stats are
emitted with the server under test stats which can be confusing, thus we now
create a new &lt;code&gt;InMemoryStatsReceiver&lt;/code&gt; when creating an embedded http client.
&lt;a href="https://github.com/twitter/finatra/commit/0c4a8ee591d4de7b50e1fd6bbfda0bb27d8fac4d"&gt;0c4a8ee5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Util&lt;/h3&gt;

&lt;p&gt;API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;util-collection: &lt;code&gt;c.t.util.SetMaker&lt;/code&gt; has been removed.
Direct usage of Guava is recommended if needed. &lt;a href="https://github.com/twitter/util/commit/b8bd0d4f60303944455402fe9ac2759ab4b2f1c6"&gt;b8bd0d4f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Scrooge&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge: Introduce &lt;code&gt;scrooge.Request&lt;/code&gt; and &lt;code&gt;scrooge.Response&lt;/code&gt; envelopes which
are used in &lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt; interfaces and associated code. The
scrooge &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; allow for passing &amp;ldquo;header&amp;rdquo; information (via
ThriftMux Message contexts) between clients and servers. For instance, a
server can implement a &lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt;, and set response headers
along with a method response, e.g.,&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  class MyService extends MyService.ReqRepServicePerEndpoint {

    def foo: Service[Request[Foo.Args], Response[Foo.SuccessType]] = {
      Service.mk[Request[Foo.Args], Response[Foo.SuccessType]] { request: Request[Foo.Args] =&amp;gt;
        val result = ... // computations
        Future
          .value(
            Response(
              headers = Map("myservice.foo.header" -&amp;gt; Seq(Buf.Utf8("value1"))),
              result)
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This &lt;code&gt;ServicePerEndpoint&lt;/code&gt; can then be served using &lt;code&gt;ThriftMux&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  ThriftMux.server.serveIface(":9999", new MyService().toThriftService)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These response headers will be transported as &lt;code&gt;Mux#contexts&lt;/code&gt; to the client. If
  the client is using the client-side &lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt; it will be able
  to read the headers from the returned &lt;code&gt;Response&lt;/code&gt; directly. E.g.,&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  val client = ThriftMux.client.reqRepServicePerEndpoint[MyService.ReqRepServicePerEndpoint]

  val response: Response[Foo.SuccessType] = Await.result(client.foo(..))

  if (response.headers.contains("myservice.foo.header")) {
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Users can also choose to wrap the &lt;code&gt;ReqRepServicePerEndpoint&lt;/code&gt; with a &lt;code&gt;MethodPerEndpoint&lt;/code&gt;
  via &lt;code&gt;ThriftMux.client.reqRepMethodPerEndpoint(reqRepServicePerEndpoint)&lt;/code&gt; in order to
  deal with methods instead of services. See the scrooge documentation for more information.
  &lt;a href="https://github.com/twitter/scrooge/commit/aa1fb0c021f63c8b8880a829fe26efef27c144f5"&gt;aa1fb0c0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Twitter Server&lt;/h3&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Treat &lt;code&gt;io.netty.channel.epoll.Native.epollWait0&lt;/code&gt; as an idle thread on
&amp;ldquo;/admin/threads&amp;rdquo;. This method is observed when using Netty 4&amp;rsquo;s native
transport. &lt;a href="https://github.com/twitter/twitter-server/commit/f8f64a46e897782896770b2c5aff9595c6347c08"&gt;f8f64a46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Changelogs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.12.0/CHANGES"&gt;Finagle 17.12.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/blob/util-17.12.0/CHANGES"&gt;Util 17.12.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.12.0/CHANGES"&gt;Scrooge 17.12.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.12.0/CHANGES"&gt;TwitterServer 17.12.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/blob/finatra-17.12.0/CHANGELOG.md"&gt;Finatra 17.12.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>🍠 November 2017 Release Notes - Version 17.11.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/11/17/release-notes/"/>
    <id>https://finagle.github.io/blog/2017/11/17/release-notes/</id>
    <published>2017-11-16T16:00:00-08:00</published>
    <updated>2018-01-18T09:03:37-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;rsquo;s November, and you know what that means!  Library releases!!!  We&amp;rsquo;re now publishing
with sbt 1.0.x, and we now also publish sbt-scrooge-plugin for sbt 1.0.x.  We are also
continuing to publish sbt-scrooge-plugin for sbt 0.13.x.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.11.0/CHANGES"&gt;Finagle 17.11.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/finatra/blob/finatra-17.11.0/CHANGELOG.md"&gt;Finatra 17.11.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.11.0/CHANGES"&gt;Scrooge 17.11.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.11.0/CHANGES"&gt;TwitterServer 17.11.0&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/blob/util-17.11.0/CHANGES"&gt;Util 17.11.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Finagle&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Add &lt;code&gt;ResponseClassifier&lt;/code&gt;s, RetryOnTimeout and RetryOnChannelClosed,
for exceptions that are commonly retried when building from ClientBuilder but had
no MethodBuilder equivalents. &lt;a href="https://github.com/twitter/finagle/commit/3d292b49e737538babb387ae39e6ee9124a641ed"&gt;3d292b49&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: &lt;code&gt;Netty4Transporter&lt;/code&gt; and &lt;code&gt;Netty4Listener&lt;/code&gt; are now accessible, which
allows external users to create their own protocols for use with Finagle on Netty 4.
&lt;a href="https://github.com/twitter/finagle/commit/3ce475dbdb800a635bbed944139b9690418e09d9"&gt;3ce475db&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Numerous overloads of &lt;code&gt;c.t.f.Server.serve&lt;/code&gt; have been marked final.
&lt;a href="https://github.com/twitter/finagle/commit/ea5438067e4db78bf5177a1dcde67f19fa8c185b"&gt;ea543806&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Correctly send &lt;code&gt;mux.Request#contexts&lt;/code&gt; in all cases. There were some
cases in which &lt;code&gt;mux.Request#contexts&lt;/code&gt; were not always propagated. The contexts are
now always written across the transport. Note that there may be duplicated contexts
between &amp;ldquo;local&amp;rdquo; context values and &amp;ldquo;broadcast&amp;rdquo; context values. Local values will
precede broadcast values in sequence. &lt;a href="https://github.com/twitter/finagle/commit/45832aad31aa33e9bddbe18c9e721e825617a159"&gt;45832aad&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Finatra&lt;/h3&gt;

&lt;p&gt;Changed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EmbeddedTwitterServer, EmbeddedHttpServer, and EmbeddedThriftServer flags
and args parameters changed to call-by-name. &lt;a href="https://github.com/twitter/finatra/commit/3276d4e99739949af2a691a9966512e86dab7715"&gt;3276d4e9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fixed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;inject-server: Ensure EmbeddedTwitterServer has started before trying to
close httpAdminClient. &lt;a href="https://github.com/twitter/finatra/commit/839afc3b54a047185b6606e5ea5b39bb365e1c17"&gt;839afc3b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Util&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;util-security: Added &lt;code&gt;c.t.util.security.PrivateKeyFile&lt;/code&gt; for reading PKCS#8
PEM formatted &lt;code&gt;PrivateKey&lt;/code&gt; files. &lt;a href="https://github.com/twitter/util/commit/23f4a6a049c55121a4cda34be3b947f3ea4bfc46"&gt;23f4a6a0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Scrooge&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: Deprecated some scala generated classes and use new ones
&lt;code&gt;FutureIface&lt;/code&gt;         -&amp;gt; &lt;code&gt;MethodPerEndpoint&lt;/code&gt;,
&lt;code&gt;MethodIface&lt;/code&gt;         -&amp;gt; &lt;code&gt;MethodPerEndpoint.apply()&lt;/code&gt;,
&lt;code&gt;MethodIfaceBuilder&lt;/code&gt;  -&amp;gt; &lt;code&gt;MethodPerEndpointBuilder&lt;/code&gt;,
&lt;code&gt;BaseServiceIface&lt;/code&gt;    -&amp;gt; &lt;code&gt;ServicePerEndpoint&lt;/code&gt;,
&lt;code&gt;ServiceIface&lt;/code&gt;        -&amp;gt; &lt;code&gt;ServicePerEndpoint&lt;/code&gt;,
&lt;code&gt;ServiceIfaceBuilder&lt;/code&gt; -&amp;gt; &lt;code&gt;ServicePerEndpointBuilder&lt;/code&gt;.
To construct a client use &lt;code&gt;c.t.f.ThriftRichClient.servicePerEndpoint&lt;/code&gt; instead of
&lt;code&gt;newServiceIface&lt;/code&gt;, to convert &lt;code&gt;ServicePerEndpoint&lt;/code&gt; to &lt;code&gt;MethodPerEndpoint&lt;/code&gt; use
&lt;code&gt;c.t.f.ThriftRichClient.methodPerEndpoint&lt;/code&gt; instead of &lt;code&gt;newMethodIface&lt;/code&gt;. &lt;a href="https://github.com/twitter/scrooge/commit/26f86b2b2ad31a6253af3659c12b587ff86ca6b6"&gt;26f86b2b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: (BREAKING API CHANGE) Change the java generator to no longer
generate files with &lt;code&gt;org.slf4j&lt;/code&gt; imports and remove limited usage of &lt;code&gt;org.slf4j&lt;/code&gt;
Logger in generated services. &lt;a href="https://github.com/twitter/scrooge/commit/bf5364be4aa0300276336fb2d5bdd3e3e44d7efe"&gt;bf5364be&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Twitter Server&lt;/h3&gt;

&lt;p&gt;Breaking API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change to apply JUL log format in the &lt;code&gt;c.t.server.logging.Logging&lt;/code&gt; trait
constructor instead of in &lt;code&gt;premain&lt;/code&gt; to apply format as early in the logging
stack as possible. However, this means that users overriding the
&lt;code&gt;def defaultFormatter&lt;/code&gt; will not be able to use any flags to configure their
formatting, note: the default &lt;code&gt;LogFormatter&lt;/code&gt; does not use flags.
&lt;a href="https://github.com/twitter/twitter-server/commit/ec674bc5b970ffcb267f19b951e28a33ee70ba7c"&gt;ec674bc5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Changelogs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.11.0/CHANGES"&gt;Finagle 17.11.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/blob/util-17.11.0/CHANGES"&gt;Util 17.11.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.11.0/CHANGES"&gt;Scrooge 17.11.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.11.0/CHANGES"&gt;TwitterServer 17.11.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/blob/finatra-17.11.0/CHANGELOG.md"&gt;Finatra 17.11.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>🛠️ Introducing Twitter Futures Capture Points</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/11/02/async-stack-traces/"/>
    <id>https://finagle.github.io/blog/2017/11/02/async-stack-traces/</id>
    <published>2017-11-01T17:00:00-07:00</published>
    <updated>2018-01-18T09:03:37-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve ever tried to debug asynchronous code written with Twitter &lt;a href="https://github.com/twitter/util/blob/develop/util-core/src/main/scala/com/twitter/util/Future.scala"&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;s, 
you may have found that the stack trace isn&amp;rsquo;t always helpful. The stack trace
at a given point in the program includes the active stack frames and thus shows
the chain of function calls that led up to that point. Since asynchronous
execution causes different parts of a program to have their stack traces chopped
up, the stack trace often shows unexpected internal library calls and is missing
the causality developers are used to from synchronous code. As a result, the
context leading to the current stack frame is lost.&lt;/p&gt;

&lt;p&gt;IntelliJ 2017.1 included a feature called &lt;a href="https://blog.jetbrains.com/idea/2017/02/intellij-idea-2017-1-eap-extends-debugger-with-async-stacktraces/"&gt;Capture Points&lt;/a&gt;.
This feature lets us stitch together stack frames so that the order of functions
in the stack trace respects the order in which they were called.&lt;/p&gt;

&lt;p&gt;Our summer intern, &lt;a href="https://twitter.com/McKardah"&gt;Haggai Kaunda&lt;/a&gt;, wrote capture
points specific to Twitter &lt;a href="https://github.com/twitter/util/blob/develop/util-core/src/main/scala/com/twitter/util/Future.scala"&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;s 
(thanks, Haggai!). Using these can make debugging asynchronous code written
with Twitter &lt;code&gt;Future&lt;/code&gt;s simpler by providing more informative stack traces.&lt;/p&gt;

&lt;p&gt;Note that as of November 2017, the capture points are guaranteed to work with
only Scala 2.11. We are not working on capture points for 2.12 at this time;
if you would like to help make this feature available for more users, you can
submit a pull request on &lt;a href="https://github.com/twitter/util"&gt;util&amp;rsquo;s GitHub repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To start using, you can grab the capture points XML file &lt;a href="https://raw.githubusercontent.com/twitter/util/develop/util-intellij/src/main/resources/util-intellij/TwitterFuturesCapturePoints.xml"&gt;directly from GitHub&lt;/a&gt;,
and after our next release it will be available as an artifact published to
Maven Central.&lt;/p&gt;

&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;The capture points are defined in &lt;a href="http://github.com/twitter/util/util-intellij/src/main/resources/util-intellij/TwitterFuturesCapturePoints.xml"&gt;TwitterFuturesCapturePoints.xml&lt;/a&gt;.
To import them into IntelliJ,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open IntelliJ. In the menu bar, click IntelliJ IDEA &amp;gt; Preferences.&lt;/li&gt;
&lt;li&gt;Navigate to Build, Execution, Deployment &amp;gt; Debugger &amp;gt; Async Stacktraces.&lt;/li&gt;
&lt;li&gt;Click the Import icon on the bottom bar. Find the XML file and click OK.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Use&lt;/h2&gt;

&lt;p&gt;Set a breakpoint where you wish to see the stack trace, debug your code, and 
look at the &amp;ldquo;Frames&amp;rdquo; tab in the Debugger. Any asynchronous calls in the stack
trace will appear in logical order. If you wish to clean up the stack trace,
click the funnel icon in the top right, &amp;ldquo;Hide Frames from Libraries&amp;rdquo;.&lt;/p&gt;

&lt;h2&gt;Example&lt;/h2&gt;

&lt;p&gt;We will illustrate how to use the capture points to assist with debugging with a
&lt;a href="http://github.com/twitter/util/util-intellij/src/test/scala/com/twitter/util/capturepoints/Demo.scala"&gt;small example&lt;/a&gt; 
written by &lt;a href="https://twitter.com/kevino"&gt;Kevin Oliver&lt;/a&gt; (thanks, Kevin!).&lt;/p&gt;

&lt;p&gt;A brief explanation of this test: the test passes a &lt;a href="https://github.com/twitter/util/blob/develop/util-core/src/main/scala/com/twitter/util/Promise.scala"&gt;&lt;code&gt;Promise[Int]&lt;/code&gt;&lt;/a&gt;
through three methods and then sets the &lt;code&gt;Promise&lt;/code&gt;’s value in a &lt;code&gt;futurePool&lt;/code&gt;.
The calls are asynchronous, but the logical flow of the test is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt; block calls &lt;code&gt;someBusinessLogic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;someBusinessLogic&lt;/code&gt; calls &lt;code&gt;moreBusinessLogic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moreBusinessLogic&lt;/code&gt; calls &lt;code&gt;lordBusinessLogic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lordBusinessLogic&lt;/code&gt; waits for the &lt;code&gt;Promise&lt;/code&gt;’s value to be set&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Promise&lt;/code&gt;’s value is set in the test block (this could happen at any
time; it is not necessarily step number 5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lordBusinessLogic&lt;/code&gt; returns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt;’s &lt;code&gt;result&lt;/code&gt; variable is &lt;code&gt;4&lt;/code&gt;, and the test passes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose we wish to inspect the stack trace from inside &lt;code&gt;lordBusinessLogic&lt;/code&gt;. If 
we set a breakpoint at line 47 and then debug the test in IntelliJ with the
capture points disabled, we see the following stack trace:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apply$mcVI$sp:47, Demo$$anonfun$lordBusinessLogic$1
apply:1820, Future$$anonfun$onSuccess$1
apply:205, Promise$Monitored
run:532, Promise$$anon$7
run:198, LocalScheduler$Activation
submit:157, LocalScheduler$Activation
submit:274, LocalScheduler
submit:109, Scheduler$
runq:522, Promise
updatelfEmpty:880, Promise
update:859, Promise
setValue:835, Promise
apply$mcV$sp:20, Demo$$anonfun$3$$anonfun$apply$1
apply:15, Try$
run:140, ExecutorServiceFuturePool$$anon$4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The library calls in the stack trace do not help us understand our code. If we
enable the capture points and again debug the test, we see the following stack
trace:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apply$mcVI$sp:47, Demo$$anonfun$lordBusinessLogic$1
apply:1820, Future$$anonfun$onSuccess$1
onSuccess:1819, Future
lordBusinessLogic:42, Demo
moreBusinessLogic:38, Demo
someBusinessLogic:31, Demo
apply:17, Demo$$anonfun$3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is much cleaner and it includes only calls to functions we wrote. It lets
us clearly see that the test block called &lt;code&gt;someBusinessLogic&lt;/code&gt;, that
&lt;code&gt;someBusinessLogic&lt;/code&gt; called &lt;code&gt;moreBusinessLogic&lt;/code&gt;, and that &lt;code&gt;moreBusinessLogic&lt;/code&gt;
called &lt;code&gt;lordBusinessLogic&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;That&amp;rsquo;s all!&lt;/h2&gt;

&lt;p&gt;Please let us know if you have any questions via &lt;a href="http://twitter.com/finagle"&gt;@finagle&lt;/a&gt;,
the &lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finaglers mailing list&lt;/a&gt;, or
&lt;a href="https://gitter.im/twitter/finagle"&gt;chat&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy debugging!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>🎃 October 2017 Release Notes - Version 17.10.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2017/10/27/release-notes/"/>
    <id>https://finagle.github.io/blog/2017/10/27/release-notes/</id>
    <published>2017-10-26T17:00:00-07:00</published>
    <updated>2018-01-18T09:03:37-08:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The October releases have arrived! For this release and hereafter, Finagle, Finatra,
Scrooge, Util, and TwitterServer will be versioned as $year.$month.$patch, as opposed to
$major.$minor.$patch. This means that all project versions will be in sync.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.10.0/CHANGES"&gt;Finagle 17.10.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/finatra/blob/finatra-17.10.0/CHANGELOG.md"&gt;Finatra 17.10.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.10.0/CHANGES"&gt;Scrooge 17.10.0&lt;/a&gt;, &lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.10.0/CHANGES"&gt;TwitterServer 17.10.0&lt;/a&gt;, and &lt;a href="https://github.com/twitter/util/blob/util-17.10.0/CHANGES"&gt;Util 17.10.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Finagle&lt;/h3&gt;

&lt;p&gt;New Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: DeadlineFilter may now be created from the class and used as a
regular Filter in addition to a stack module as before. &lt;a href="https://github.com/twitter/finagle/commit/b80a1df4156fc6f7e4b35399d996bc46af465881"&gt;b80a1df4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: Add ability to toggle the &lt;code&gt;CLIENT_FOUND_ROWS&lt;/code&gt; flag. &lt;a href="https://github.com/twitter/finagle/commit/fae2e69d81faeef7cf0dee0340cb4ec27d2bcf10"&gt;fae2e69d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Separated the DtabFilter.Extractor from the ServerContextFilter into
a new module: ServerDtabContextFilter. While this is still enabled in the default
Http server stack, it can be disabled independently of the ServerContextFilter.
&lt;a href="https://github.com/twitter/finagle/commit/335d639f2140f44948b914b931bd467774e72fc2"&gt;335d639f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runtime Behavior Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: &lt;code&gt;Netty4ClientEngineFactory&lt;/code&gt; and &lt;code&gt;Netty4ServerEngineFactory&lt;/code&gt; now
validate loaded certificates in all cases to ensure that the current date
range is within the validity range specified in the certificate. &lt;a href="https://github.com/twitter/finagle/commit/dc3230e3a98fb6ec68f23f8fc00c703401db5738"&gt;dc3230e3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: &lt;code&gt;TrustCredentials.Insecure&lt;/code&gt; now works with native SSL/TLS engines.
&lt;a href="https://github.com/twitter/finagle/commit/6b822e94e309f0946ace6586095a511d47fa152b"&gt;6b822e94&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: Upgraded to the new netty http/2 API in netty version 4.1.16.Final,
which fixes several long-standing bugs but has some bugs around cleartext http/2.
One of the work-arounds modifies the visibility of a private field, so it&amp;rsquo;s incompatible
with security managers.  This is only true for http/2&amp;ndash;all other protocols will be unaffected.
&lt;a href="https://github.com/twitter/finagle/commit/bb01393fc2a41a34e7ff92e1e7dc24bcadbef954"&gt;bb01393f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Netty 3 &lt;code&gt;HeaderMap&lt;/code&gt; was replaced with our own implementation.
&lt;a href="https://github.com/twitter/finagle/commit/199dc51cfcf573349fe436d7eaf594a857667657"&gt;199dc51c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deprecations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finagle-base-http: With the intention to make &lt;code&gt;c.t.f.http.Cookie&lt;/code&gt; immutable,
&lt;code&gt;set&lt;/code&gt; methods on &lt;code&gt;c.t.f.http.Cookie&lt;/code&gt; have been deprecated:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;comment_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commentUrl_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;domain_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maxAge_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ports_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;version_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;httpOnly_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isDiscard_=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isSecure_=&lt;/code&gt;
Use the &lt;code&gt;c.t.f.http.Cookie&lt;/code&gt; constructor to set &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;maxAge&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;httpOnly&lt;/code&gt;,
and &lt;code&gt;secure&lt;/code&gt;. &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;commentUrl&lt;/code&gt;, &lt;code&gt;ports&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;discard&lt;/code&gt; have been removed
per RFC-6265. &lt;a href="https://github.com/twitter/finagle/commit/717600969e4d4e7db047e758deae0ba30282461d"&gt;71760096&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alternatively, use the &lt;code&gt;domain&lt;/code&gt;, &lt;code&gt;maxAge&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;httpOnly&lt;/code&gt;, and &lt;code&gt;secure&lt;/code&gt; methods to create a
  new &lt;code&gt;Cookie&lt;/code&gt; with the existing fields set, and the respective field set to a given value.
  &lt;a href="https://github.com/twitter/finagle/commit/14beb975d1c3aa4f57cf2ee3a0ab46c766496737"&gt;14beb975&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finagle-base-http: &lt;code&gt;c.t.f.http.Cookie.isSecure&lt;/code&gt; and &lt;code&gt;c.t.f.http.Cookie.isDiscard&lt;/code&gt;
have been deprecated. Use &lt;code&gt;c.t.f.http.Cookie.secure&lt;/code&gt; for &lt;code&gt;c.t.f.http.Cookie.isSecure&lt;/code&gt;.
&lt;code&gt;isDiscard&lt;/code&gt; has been removed per RFC-6265. &lt;a href="https://github.com/twitter/finagle/commit/717600969e4d4e7db047e758deae0ba30282461d"&gt;71760096&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: Moved &lt;code&gt;Cursors.cursor&lt;/code&gt; method to &lt;code&gt;Client&lt;/code&gt; trait, and removed &lt;code&gt;Cursors&lt;/code&gt; trait.
This allows cursor queries to used with transactions. &lt;a href="https://github.com/twitter/finagle/commit/1224721ccf25930e5f2cede3f4ecedfca219dee9"&gt;1224721c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mux: Expose transport contexts in mux.Request and mux.Response. &lt;a href="https://github.com/twitter/finagle/commit/f0f46785a24daa09a68ebcf2f4b841474df31114"&gt;f0f46785&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mux: The &amp;ldquo;leased&amp;rdquo; gauge has been removed from the mux client implementation since the
metric is reported as the sum of the value over all clients which is unlikely to be useful.
&lt;a href="https://github.com/twitter/finagle/commit/1c31e3848e337f3bc5b8bfd687daadffc64dbb94"&gt;1c31e384&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Finatra&lt;/h3&gt;

&lt;p&gt;Added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;inject-core: Remove deprecated &lt;code&gt;c.t.inject.TestMixin#resetMocks&lt;/code&gt;. Properly
use &lt;code&gt;c.t.inject.Mockito&lt;/code&gt; trait in tests. Deprecate resetting of mocks and
resettables in &lt;code&gt;c.t.inject.IntegrationTestMixin&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/b8cfeb659b39cfb232a2c7142700ff437fe8adf2"&gt;b8cfeb65&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Parameterize &lt;code&gt;@RouteParam&lt;/code&gt;,&lt;code&gt;@QueryParam&lt;/code&gt;,&lt;code&gt;@FormParam&lt;/code&gt;, and
&lt;code&gt;@Header&lt;/code&gt; to allow specifying the field name to read from the params or
header map. Previously these annotations only looked for values by the
case class field name leading to possible ugliness when defining case
class fields (especially with &lt;code&gt;@Header&lt;/code&gt;). &lt;a href="https://github.com/twitter/finatra/commit/9913a6cccc378c6ba286f91a317381db5b378059"&gt;9913a6cc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra: Add support for using a &lt;code&gt;java.lang.annotation.Annotation&lt;/code&gt; instance
with the &lt;code&gt;#bind[T]&lt;/code&gt; testing DSL. This adds a way to bind instances in tests
that use the @Named binding annotation. &lt;a href="https://github.com/twitter/finatra/commit/f9503c4ce1acda711abf093d941f489f614900ea"&gt;f9503c4c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Allow setting the content type of a Mustache view.
&lt;a href="https://github.com/twitter/finatra/commit/2009159f5b6975d8f5aca7b3018356ebd90d08dd"&gt;2009159f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Changed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-utils: Remove deprecated &lt;code&gt;ExternalServiceExceptionMatcher&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/9c78117a1fe5a8731e4315d0ce7f60c3f47c419b"&gt;9c78117a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: ScalaType&amp;rsquo;s &lt;code&gt;isMap&lt;/code&gt; and &lt;code&gt;isCollection&lt;/code&gt; methods now check that
the given object&amp;rsquo;s class is a subclass of &lt;code&gt;scala.collection.Map[Any, Any]&lt;/code&gt; and
&lt;code&gt;scala.collection.Iterable[Any]&lt;/code&gt;, respectively. Previously the superclasses&amp;rsquo;
packages were unspecified. This is a runtime behavior change.
&lt;a href="https://github.com/twitter/finatra/commit/15a4e529153437bb43ee65d38a8160d5ae137ff7"&gt;15a4e529&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Require that route URIs and prefixes begin with forward slash (/).
&lt;a href="https://github.com/twitter/finatra/commit/9bd53557a3fc24d4ae9ea98392388d9ac9d440f2"&gt;9bd53557&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-utils: (BREAKING API CHANGE) RichOption toFutureOrFail, toTryOrFail, and
toFutureOrElse signature changed to take the fail or else parameter by name.
&lt;a href="https://github.com/twitter/finatra/commit/a1efd13ff295051ce06679ce3bf7d99b20ccbd7b"&gt;a1efd13f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-server: Remove usage of deprecated &lt;code&gt;c.t.inject.logging.Slf4jBridgeUtility&lt;/code&gt;.
Change usages to &lt;code&gt;c.t.util.logging.Slf4jBridgeUtility&lt;/code&gt;. &lt;a href="https://github.com/twitter/finatra/commit/4cf842ba4aaed545a897f60e546b25d5114960cb"&gt;4cf842ba&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http, inject-thrift-client: Remove netty3 specific types and dependency.
In finatra-http, the code using these types is deprecated and can be removed allowing
us to remove netty3-specific dependencies. In inject-thrift-client we can default to
use the DefaultTimer for the backupRequestFilter method param instead of the
HashedWheelTimer. &lt;a href="https://github.com/twitter/finatra/commit/d8fb15fe4fc7beb6ee7f1b85eef62af2f510a7af"&gt;d8fb15fe&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fixed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finatra-jackson: Fix issue causing &lt;code&gt;IllegalArgumentException&lt;/code&gt; from Validations to
be swallowed. A catch clause in the &lt;code&gt;c.t.finatra.json.internal.caseclass.jackson.FinatraCaseClassDeserializer&lt;/code&gt;
is too broad as it catches thrown &lt;code&gt;IllegalArgumentException&lt;/code&gt;s from field validations
when the annotation is applied to a field of the incorrect type, e.g., when &lt;code&gt;@Max&lt;/code&gt; is
applied to a String field. &lt;a href="https://github.com/twitter/finatra/commit/37ec705095e2702a31dc1fb6d75f078746acbc5a"&gt;37ec7050&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Util&lt;/h3&gt;

&lt;p&gt;API Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;util-app: c.t.app.Flag.let and letClear are now generic in their return type.
&lt;a href="https://github.com/twitter/util/commit/a58db2892d82f68bbaa5b41c1394aca9011fd5ef"&gt;a58db289&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bug Fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Fix Buf.ByteArray.Shared.apply(bytes,begin,end) constructor function.
&lt;a href="https://github.com/twitter/util/commit/363778374f8366e13ab0142ca549559a6ba5516c"&gt;36377837&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Runtime Behavior Changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: c.t.io.Buf.ByteArray.&lt;a href="Array[Byte],%20begin,%20end"&gt;Owned.Shared&lt;/a&gt; now
validates its input arguments. &lt;a href="https://github.com/twitter/util/commit/363778374f8366e13ab0142ca549559a6ba5516c"&gt;36377837&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-jvm: The &lt;code&gt;jvm/mem/postGC/{poolName}/max&lt;/code&gt; metric has been removed
because it is the same as the &lt;code&gt;jvm/mem/current/{poolName}/max&lt;/code&gt; metric.
&lt;a href="https://github.com/twitter/util/commit/357912dac0696cb77d77070ec95504145a0902ba"&gt;357912da&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-security: Assert validity of X.509 certificates when read from a file.
Attempting to read a &lt;code&gt;c.t.util.security.X509CeritificateFile&lt;/code&gt; will now assert
that the certificate is valid, i.e., if the current date and time are within
the validity period given in the certificate. &lt;a href="https://github.com/twitter/util/commit/9dc859efef85d173aaefe08d9aa930fa7662006a"&gt;9dc859ef&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Scrooge&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: For generated scala $FinagleService, moved per-endpoint statsFilter to the
outermost of filter chain so it can capture all exceptions, added per-endpoint response
classification in statsFilter. &lt;a href="https://github.com/twitter/scrooge/commit/853323dce96d8e8d0d0c7f63d888dc969472f67a"&gt;853323dc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;scrooge-generator: Generated scala $FinagleClient takes a &lt;code&gt;RichClientParam&lt;/code&gt; for all
configuration params, such as &lt;code&gt;TProtocolFactory&lt;/code&gt;, &lt;code&gt;ResponseClassifier&lt;/code&gt;, &lt;code&gt;maxReusableBufferSize&lt;/code&gt;,
and &lt;code&gt;StatsReceiver&lt;/code&gt;, $FinagleService takes a &lt;code&gt;RichServerParam&lt;/code&gt;. &lt;a href="https://github.com/twitter/scrooge/commit/8bdf36cbd0297f45704ea48dc7a62872f0e581ce"&gt;8bdf36cb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Twitter Server&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TwitterServer now uses the &lt;a href="https://www.slf4j.org/"&gt;&lt;code&gt;slf4j-api&lt;/code&gt;&lt;/a&gt; for framework logging. Backwards compatibility is 
supplied via the &lt;a href="https://github.com/twitter/twitter-server/tree/6565a1c6ab6d111e9858e2e9e2e5d307d8ca8b3e/slf4j-jdk14"&gt;&lt;code&gt;twitter-server/slf4j-jdk14&lt;/code&gt;&lt;/a&gt; library.
See the TwitterServer &lt;a href="https://twitter.github.io/twitter-server/Features.html#logging"&gt;documentation&lt;/a&gt; for more information. &lt;a href="https://github.com/twitter/twitter-server/commit/c458b88161f56768d0226c8419424f8365574b83"&gt;c458b881&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All admin endpoints except ping + healthcheck are now by-default served outside
the global worker pool. &lt;a href="https://github.com/twitter/twitter-server/commit/acf13a2a933618fb3f719a1a4cf7b5b53ef23b7d"&gt;acf13a2a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rename AdminHttpServer#defaultHttpPort to AdminHttpServer#defaultAdminPort.
&lt;a href="https://github.com/twitter/twitter-server/commit/15e35a3a3070c50168ff55fd83a2dff28b09795c"&gt;15e35a3a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dependencies&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Netty has been updated to 4.1.16 &lt;a href="https://github.com/twitter/finagle/commit/f28705d556077cbd56b19ce90eba35be7203ad07"&gt;f28705d5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Changelogs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finagle/blob/finagle-17.10.0/CHANGES"&gt;Finagle 17.10.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/util/blob/util-17.10.0/CHANGES"&gt;Util 17.10.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/scrooge/blob/scrooge-17.10.0/CHANGES"&gt;Scrooge 17.10.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/twitter-server/blob/twitter-server-17.10.0/CHANGES"&gt;TwitterServer 17.10.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/twitter/finatra/blob/finatra-17.10.0/CHANGELOG.md"&gt;Finatra 17.10.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
